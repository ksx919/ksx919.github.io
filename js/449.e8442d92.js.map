{"version":3,"file":"js/449.e8442d92.js","mappings":"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","sources":["webpack://aihub/./src/views/McpTest.vue","webpack://aihub/./src/views/McpTest.vue?0e27"],"sourcesContent":["<template>\r\n  <div class=\"mcp-test\">\r\n    <h1>MCP 服务测试页面</h1>\r\n    \r\n    <!-- 服务状态 -->\r\n    <div class=\"status-section\">\r\n      <h2>服务状态</h2>\r\n      <el-button @click=\"checkStatus\" :loading=\"statusLoading\">检查服务状态</el-button>\r\n      <el-button @click=\"testApiKey\" :loading=\"apiKeyTestLoading\" style=\"margin-left: 10px;\">测试API Key</el-button>\r\n      <div v-if=\"statusInfo\" class=\"status-info\">\r\n        <pre>{{ statusInfo }}</pre>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 天气查询 -->\r\n    <div class=\"weather-section\">\r\n      <h2>天气查询</h2>\r\n      <el-input v-model=\"weatherAdcode\" placeholder=\"请输入城市名称或adcode (如: 北京, 110000)\" style=\"width: 300px; margin-right: 10px;\"></el-input>\r\n      <el-button @click=\"getWeather\" :loading=\"weatherLoading\">查询实时天气</el-button>\r\n      <el-button @click=\"getWeatherForecast\" :loading=\"weatherForecastLoading\" style=\"margin-left: 10px;\">查询天气预报</el-button>\r\n      <el-button @click=\"testCityMatch\" :loading=\"cityMatchLoading\" style=\"margin-left: 10px;\">测试城市匹配</el-button>\r\n      <el-button @click=\"testAddressCoordinate\" :loading=\"addressCoordinateLoading\" style=\"margin-left: 10px;\">测试地址转坐标</el-button>\r\n      <el-button @click=\"debugRoute\" :loading=\"debugRouteLoading\" style=\"margin-left: 10px;\">调试路线规划</el-button>\r\n      <div style=\"margin-top: 10px; color: #666; font-size: 12px;\">\r\n        支持多种格式：北京、北京市、福建省南平市、南平市、南平等\r\n      </div>\r\n      <div style=\"margin-top: 5px; color: #666; font-size: 12px;\">\r\n        常见地址示例：天安门、故宫、颐和园、外滩、东方明珠、广州塔、深圳湾等\r\n      </div>\r\n      <div v-if=\"weatherInfo\" class=\"weather-info\">\r\n        <pre>{{ weatherInfo }}</pre>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 路线规划 -->\r\n    <div class=\"route-section\">\r\n      <h2>路线规划</h2>\r\n      <el-input v-model=\"routeOrigin\" placeholder=\"起点 (如: 北京站)\" style=\"width: 200px; margin-right: 10px;\"></el-input>\r\n      <el-input v-model=\"routeDestination\" placeholder=\"终点 (如: 天安门)\" style=\"width: 200px; margin-right: 10px;\"></el-input>\r\n      <el-select v-model=\"routeMode\" placeholder=\"出行方式\" style=\"width: 120px; margin-right: 10px;\">\r\n        <el-option label=\"自驾\" value=\"driving\"></el-option>\r\n        <el-option label=\"步行\" value=\"walking\"></el-option>\r\n        <el-option label=\"公交\" value=\"transit\"></el-option>\r\n      </el-select>\r\n      <el-button @click=\"getRoute\" :loading=\"routeLoading\">规划路线</el-button>\r\n      <div style=\"margin-top: 10px; color: #666; font-size: 12px;\">\r\n        支持地址名称，系统会自动转换为坐标进行路线规划\r\n      </div>\r\n      <div v-if=\"routeInfo\" class=\"route-info\">\r\n        <pre>{{ routeInfo }}</pre>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 地点搜索 -->\r\n    <div class=\"search-section\">\r\n      <h2>地点搜索</h2>\r\n      <el-input v-model=\"searchKeyword\" placeholder=\"搜索关键词\" style=\"width: 200px; margin-right: 10px;\"></el-input>\r\n      <el-input v-model=\"searchCity\" placeholder=\"城市\" style=\"width: 200px; margin-right: 10px;\"></el-input>\r\n      <el-button @click=\"searchPlaces\" :loading=\"searchLoading\">搜索地点</el-button>\r\n      <div v-if=\"searchInfo\" class=\"search-info\">\r\n        <pre>{{ searchInfo }}</pre>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- AI 智能规划 -->\r\n    <div class=\"ai-plan-section\">\r\n      <h2>AI 智能规划</h2>\r\n      <el-input\r\n        v-model=\"aiRequest\"\r\n        type=\"textarea\"\r\n        :rows=\"4\"\r\n        placeholder=\"请输入您的行程需求，例如：我想去北京旅游，计划开车去，需要详细的行程规划\"\r\n        style=\"width: 100%; margin-bottom: 10px;\"\r\n      ></el-input>\r\n      <el-button @click=\"aiPlan\" :loading=\"aiPlanLoading\" type=\"primary\">AI 智能规划</el-button>\r\n      <div v-if=\"aiPlanResult\" class=\"ai-plan-result\">\r\n        <pre>{{ aiPlanResult }}</pre>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'McpTest',\r\n  data() {\r\n    return {\r\n      // 状态相关\r\n      statusLoading: false,\r\n      statusInfo: '',\r\n      apiKeyTestLoading: false,\r\n      \r\n      // 天气相关\r\n      weatherAdcode: '110000', // 默认北京\r\n      weatherLoading: false,\r\n      weatherInfo: '',\r\n      weatherForecastLoading: false,\r\n      cityMatchLoading: false,\r\n      addressCoordinateLoading: false,\r\n      debugRouteLoading: false,\r\n      \r\n      // 路线相关\r\n      routeOrigin: '北京站',\r\n      routeDestination: '天安门',\r\n      routeMode: 'driving',\r\n      routeLoading: false,\r\n      routeInfo: '',\r\n      \r\n      // 搜索相关\r\n      searchKeyword: '景点',\r\n      searchCity: '北京',\r\n      searchLoading: false,\r\n      searchInfo: '',\r\n      \r\n      // AI 规划相关\r\n      aiRequest: '我想去北京旅游，计划开车去，需要详细的行程规划',\r\n      aiPlanLoading: false,\r\n      aiPlanResult: ''\r\n    }\r\n  },\r\n  methods: {\r\n    async checkStatus() {\r\n      this.statusLoading = true\r\n      try {\r\n        const response = await axios.get('/api/mcp/status')\r\n        this.statusInfo = JSON.stringify(response.data, null, 2)\r\n      } catch (error) {\r\n        this.statusInfo = '检查状态失败: ' + error.message\r\n      } finally {\r\n        this.statusLoading = false\r\n      }\r\n    },\r\n    \r\n    async getWeather() {\r\n      if (!this.weatherAdcode) {\r\n        this.$message.warning('请输入行政区划编码 (adcode)')\r\n        return\r\n      }\r\n      \r\n      this.weatherLoading = true\r\n      try {\r\n        const response = await axios.get(`/api/mcp/weather?adcode=${this.weatherAdcode}`)\r\n        this.weatherInfo = JSON.stringify(response.data, null, 2)\r\n      } catch (error) {\r\n        this.weatherInfo = '获取天气信息失败: ' + error.message\r\n      } finally {\r\n        this.weatherLoading = false\r\n      }\r\n    },\r\n\r\n         async getWeatherForecast() {\r\n       if (!this.weatherAdcode) {\r\n         this.$message.warning('请输入行政区划编码 (adcode)')\r\n         return\r\n       }\r\n\r\n       this.weatherForecastLoading = true\r\n       try {\r\n         const response = await axios.get(`/api/mcp/weather-forecast?adcode=${this.weatherAdcode}&days=0`)\r\n         this.weatherInfo = JSON.stringify(response.data, null, 2)\r\n       } catch (error) {\r\n         this.weatherInfo = '获取天气预报失败: ' + error.message\r\n       } finally {\r\n         this.weatherForecastLoading = false\r\n       }\r\n     },\r\n     \r\n     async testCityMatch() {\r\n       if (!this.weatherAdcode) {\r\n         this.$message.warning('请输入城市名称')\r\n         return\r\n       }\r\n       \r\n       this.cityMatchLoading = true\r\n       try {\r\n         const response = await axios.get(`/api/mcp/test-city-match?cityName=${encodeURIComponent(this.weatherAdcode)}`)\r\n         this.weatherInfo = JSON.stringify(response.data, null, 2)\r\n       } catch (error) {\r\n         this.weatherInfo = '测试城市匹配失败: ' + error.message\r\n       } finally {\r\n         this.cityMatchLoading = false\r\n       }\r\n     },\r\n     \r\n     async testAddressCoordinate() {\r\n       if (!this.weatherAdcode) {\r\n         this.$message.warning('请输入要测试的地址')\r\n         return\r\n       }\r\n       \r\n       this.addressCoordinateLoading = true\r\n       try {\r\n         const response = await axios.get(`/api/mcp/test-address-coordinate?address=${encodeURIComponent(this.weatherAdcode)}`)\r\n         this.weatherInfo = JSON.stringify(response.data, null, 2)\r\n       } catch (error) {\r\n         this.weatherInfo = '测试地址转坐标失败: ' + error.message\r\n       } finally {\r\n         this.addressCoordinateLoading = false\r\n       }\r\n     },\r\n     \r\n     async debugRoute() {\r\n       if (!this.routeOrigin || !this.routeDestination) {\r\n         this.$message.warning('请输入起点和终点')\r\n         return\r\n       }\r\n       \r\n       this.debugRouteLoading = true\r\n       try {\r\n         const response = await axios.get(`/api/mcp/debug-route?origin=${encodeURIComponent(this.routeOrigin)}&destination=${encodeURIComponent(this.routeDestination)}`)\r\n         this.weatherInfo = JSON.stringify(response.data, null, 2)\r\n       } catch (error) {\r\n         this.weatherInfo = '调试路线规划失败: ' + error.message\r\n       } finally {\r\n         this.debugRouteLoading = false\r\n       }\r\n     },\r\n    \r\n    async getRoute() {\r\n      if (!this.routeOrigin || !this.routeDestination) {\r\n        this.$message.warning('请输入起点和终点')\r\n        return\r\n      }\r\n      \r\n      this.routeLoading = true\r\n      try {\r\n        const response = await axios.get(`/api/mcp/route?origin=${encodeURIComponent(this.routeOrigin)}&destination=${encodeURIComponent(this.routeDestination)}&mode=${this.routeMode}`)\r\n        this.routeInfo = JSON.stringify(response.data, null, 2)\r\n      } catch (error) {\r\n        this.routeInfo = '获取路线信息失败: ' + error.message\r\n      } finally {\r\n        this.routeLoading = false\r\n      }\r\n    },\r\n    \r\n    async searchPlaces() {\r\n      if (!this.searchKeyword) {\r\n        this.$message.warning('请输入搜索关键词')\r\n        return\r\n      }\r\n      \r\n      this.searchLoading = true\r\n      try {\r\n        const response = await axios.get(`/api/mcp/search?keyword=${encodeURIComponent(this.searchKeyword)}&city=${encodeURIComponent(this.searchCity)}`)\r\n        this.searchInfo = JSON.stringify(response.data, null, 2)\r\n      } catch (error) {\r\n        this.searchInfo = '搜索地点失败: ' + error.message\r\n      } finally {\r\n        this.searchLoading = false\r\n      }\r\n    },\r\n    \r\n    async aiPlan() {\r\n      if (!this.aiRequest) {\r\n        this.$message.warning('请输入行程需求')\r\n        return\r\n      }\r\n      \r\n      this.aiPlanLoading = true\r\n      try {\r\n        const response = await axios.post('/api/mcp/ai-plan', this.aiRequest, {\r\n          headers: {\r\n            'Content-Type': 'text/plain'\r\n          }\r\n        })\r\n        this.aiPlanResult = JSON.stringify(response.data, null, 2)\r\n      } catch (error) {\r\n        this.aiPlanResult = 'AI 规划失败: ' + error.message\r\n      } finally {\r\n        this.aiPlanLoading = false\r\n      }\r\n    },\r\n\r\n         async testApiKey() {\r\n       this.apiKeyTestLoading = true\r\n       try {\r\n         const response = await axios.get('/api/mcp/test-key')\r\n         this.statusInfo = JSON.stringify(response.data, null, 2)\r\n       } catch (error) {\r\n         this.statusInfo = '测试 API Key 失败: ' + error.message\r\n       } finally {\r\n         this.apiKeyTestLoading = false\r\n       }\r\n     }\r\n  },\r\n  \r\n  mounted() {\r\n    // 页面加载时自动检查服务状态\r\n    this.checkStatus()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.mcp-test {\r\n  padding: 20px;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  max-height: 90vh;\r\n  overflow: auto;\r\n}\r\n\r\n.mcp-test h1 {\r\n  color: #409EFF;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.mcp-test h2 {\r\n  color: #606266;\r\n  margin: 20px 0 10px 0;\r\n  border-bottom: 2px solid #409EFF;\r\n  padding-bottom: 5px;\r\n}\r\n\r\n.status-section,\r\n.weather-section,\r\n.route-section,\r\n.search-section,\r\n.ai-plan-section {\r\n  margin-bottom: 30px;\r\n  padding: 20px;\r\n  border: 1px solid #DCDFE6;\r\n  border-radius: 8px;\r\n  background-color: #FAFAFA;\r\n}\r\n\r\n.status-info,\r\n.weather-info,\r\n.route-info,\r\n.search-info,\r\n.ai-plan-result {\r\n  margin-top: 15px;\r\n  padding: 15px;\r\n  background-color: #F5F7FA;\r\n  border-radius: 4px;\r\n  border-left: 4px solid #409EFF;\r\n}\r\n\r\n.status-info pre,\r\n.weather-info pre,\r\n.route-info pre,\r\n.search-info pre,\r\n.ai-plan-result pre {\r\n  margin: 0;\r\n  white-space: pre-wrap;\r\n  word-wrap: break-word;\r\n  font-family: 'Courier New', monospace;\r\n  font-size: 12px;\r\n  line-height: 1.4;\r\n}\r\n\r\n.ai-plan-section {\r\n  background-color: #F0F9FF;\r\n  border-color: #409EFF;\r\n}\r\n\r\n.ai-plan-result {\r\n  background-color: #E6F7FF;\r\n  border-left-color: #67C23A;\r\n}\r\n</style> ","import { render } from \"./McpTest.vue?vue&type=template&id=65f8a217&scoped=true\"\nimport script from \"./McpTest.vue?vue&type=script&lang=js\"\nexport * from \"./McpTest.vue?vue&type=script&lang=js\"\n\nimport \"./McpTest.vue?vue&type=style&index=0&id=65f8a217&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-65f8a217\"]])\n\nexport default __exports__"],"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_el_button","onClick","$options","checkStatus","loading","$data","statusLoading","_cache","testApiKey","apiKeyTestLoading","style","statusInfo","_hoisted_3","_toDisplayString","_hoisted_4","_component_el_input","weatherAdcode","$event","placeholder","getWeather","weatherLoading","getWeatherForecast","weatherForecastLoading","testCityMatch","cityMatchLoading","testAddressCoordinate","addressCoordinateLoading","debugRoute","debugRouteLoading","weatherInfo","_hoisted_5","_hoisted_6","routeOrigin","routeDestination","_component_el_select","routeMode","_component_el_option","label","value","getRoute","routeLoading","routeInfo","_hoisted_7","_hoisted_8","searchKeyword","searchCity","searchPlaces","searchLoading","searchInfo","_hoisted_9","_hoisted_10","aiRequest","type","rows","aiPlan","aiPlanLoading","aiPlanResult","_hoisted_11","name","data","methods","this","response","axios","get","JSON","stringify","error","message","$message","warning","encodeURIComponent","post","headers","mounted","__exports__","render"],"sourceRoot":""}